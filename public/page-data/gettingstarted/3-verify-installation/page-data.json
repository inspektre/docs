{"componentChunkName":"component---src-templates-docs-js","path":"/gettingstarted/3-verify-installation","result":{"data":{"site":{"siteMetadata":{"title":"inspektre docs","docsLocation":"https://github.com/inspektre/docs.git","docsLocationType":"github","editable":true}},"mdx":{"fields":{"id":"ededb061-c82a-5562-b466-4bafe909e6a3","title":"Initialization","slug":"/gettingstarted/3-verify-installation"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Initialization\",\n  \"metaTitle\": \"Inspektre | Initialization\",\n  \"metaDescription\": \"Initialization\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Info = makeShortcode(\"Info\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Version\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"To check the version of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"inspektre SDK\"), \", type \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"inspektre -V\"), \" in a terminal.\")), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Initialization\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Type\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"inspektre init\"), \" in a terminal to start initialization. Initialization option creates necessary configuration files/directories under the current user's context and must be used on trusted compute systems only.\"), mdx(Info, {\n    mdxType: \"Info\"\n  }, \"For common use-cases such as a CI/CD pipeline, do not use initialization. Instead configure and use required secrets.\")), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Verify Initialization\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Inspektre create a configuration file that would later hold session key. Please find the list of locations by Operating Systems.\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Micosoft Windows: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"C:\\\\Users\\\\<user>\\\\.config\\\\inspektre\\\\.env\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mac OS X: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"/Users/<user>/.config/inspektre/.env\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"ChromeOS & Linux (Debian/Fedora/): \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"/home/<user>/.config/inspektre/.env\")))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#version","title":"Version"},{"url":"#initialization","title":"Initialization"},{"url":"#verify-initialization","title":"Verify Initialization"}]},"timeToRead":1,"parent":{"__typename":"File","relativePath":"gettingstarted/3-verify-installation.md","fields":{"gitLogLatestAuthorName":"Uday Korlimarla","gitLogLatestAuthorEmail":"uday@inspektre.io","gitLogLatestDate":"14 hours ago"}},"frontmatter":{"metaTitle":"Inspektre | Initialization","showMetadata":null,"editable":null,"showPreviousNext":null,"showToc":null}},"gitBranch":{"name":"main"},"gitCommit":{"hash":"317ec5dc812ee544e3410b93253c69fa7b2084ce","date":"2020-12-06 04:06"}},"pageContext":{"id":"ededb061-c82a-5562-b466-4bafe909e6a3"}},"staticQueryHashes":["12478684","12478684","2882937274","2882937274","353167761","353167761"]}