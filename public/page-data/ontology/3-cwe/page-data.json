{"componentChunkName":"component---src-templates-docs-js","path":"/ontology/3-cwe","result":{"data":{"site":{"siteMetadata":{"title":"inspektre docs","docsLocation":"https://github.com/inspektre/docs.git","docsLocationType":"github","editable":true}},"mdx":{"fields":{"id":"ed9b1339-5adc-51d7-8a3a-867dbbfb114b","title":"CWE","slug":"/ontology/3-cwe"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"CWE\",\n  \"metaTitle\": \"Inspektre | CWE \",\n  \"metaDescription\": \"Common Weakness Enumeration\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"What is a CWE\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Common Weakness Enumeration (CWE) is a community developed list / dictionary of software & hardware weaknesses that have security implications.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It serves as a common language across a plethora of security tools to serve as a baseline for identifying security weaknesses that may potentially exist.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CWEs help developers and security to understand a specific class or type when performing remediation or hardening.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"More infomation can be \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://cwe.mitre.org/\"\n  }), \"found here\"), \" \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://cwe.mitre.org/\"\n  }), \"https://cwe.mitre.org/\"), \".\"))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Instance of CWE\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"CWE-1289\"), \" represents a unique weakness that relates to weakness class where payload is received (From user or machines) and is consumed without validation.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"CWEs\"), \" are hireachical i.e. CWE-20 corresponds to improper input validation. Thus logically, \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"CWE-1289\"), \" has a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"child-of\"), \" relationship with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"CWE-20\"), \".\"))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Knowledge Graphs\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Inspektre Knowledge Graphs treat these relationships as special properties to automaitcally produce more meaningful contexts.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"When code is examined to extract Code Integellicence, Information obtained is automaitcally classified into the relevant CWE hierarchy.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"When Inspektre is used as part of a CI/CD pipeline after SAST / IAST tools generate report, this Information is used to further augment the Knowledge graph.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Each augmentation step helps Organization OR project with more specific cyber attacks.\"))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"More information\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"For more information on Code Intelligence, Application Profiling & Knowledge Graphs, Please reach out to us at \", mdx(\"em\", {\n    parentName: \"p\"\n  }, mdx(\"a\", _extends({\n    parentName: \"em\"\n  }, {\n    \"href\": \"mailto:contact@inspektre.io\"\n  }), \"contact@inspektre.io\")), \".\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#what-is-a-cwe","title":"What is a CWE"},{"url":"#instance-of-cwe","title":"Instance of CWE"},{"url":"#knowledge-graphs","title":"Knowledge Graphs"},{"url":"#more-information","title":"More information"}]},"timeToRead":1,"parent":{"__typename":"File","relativePath":"ontology/3-cwe.md","fields":{"gitLogLatestAuthorName":"Uday Korlimarla","gitLogLatestAuthorEmail":"uday@inspektre.io","gitLogLatestDate":"14 hours ago"}},"frontmatter":{"metaTitle":"Inspektre | CWE ","showMetadata":null,"editable":null,"showPreviousNext":null,"showToc":null}},"gitBranch":{"name":"main"},"gitCommit":{"hash":"317ec5dc812ee544e3410b93253c69fa7b2084ce","date":"2020-12-06 04:06"}},"pageContext":{"id":"ed9b1339-5adc-51d7-8a3a-867dbbfb114b"}},"staticQueryHashes":["12478684","12478684","2882937274","2882937274","353167761","353167761"]}