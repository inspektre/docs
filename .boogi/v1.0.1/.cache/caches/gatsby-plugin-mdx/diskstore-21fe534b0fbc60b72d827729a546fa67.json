{"expireTime":9007200861919645000,"key":"gatsby-plugin-mdx-entire-payload-634e17162fc24a4a7a1c2cdd9084f6de-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Version","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":10,"offset":10},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":10,"offset":10},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To check the version of ","position":{"start":{"line":3,"column":1,"offset":11},"end":{"line":3,"column":25,"offset":35},"indent":[]}},{"type":"inlineCode","value":"inspektre SDK","position":{"start":{"line":3,"column":25,"offset":35},"end":{"line":3,"column":40,"offset":50},"indent":[]}},{"type":"text","value":", type ","position":{"start":{"line":3,"column":40,"offset":50},"end":{"line":3,"column":47,"offset":57},"indent":[]}},{"type":"inlineCode","value":"inspektre -V","position":{"start":{"line":3,"column":47,"offset":57},"end":{"line":3,"column":61,"offset":71},"indent":[]}},{"type":"text","value":" in a terminal.","position":{"start":{"line":3,"column":61,"offset":71},"end":{"line":3,"column":76,"offset":86},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":11},"end":{"line":3,"column":76,"offset":86},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Initialization","position":{"start":{"line":5,"column":3,"offset":90},"end":{"line":5,"column":17,"offset":104},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":88},"end":{"line":5,"column":17,"offset":104},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Type","position":{"start":{"line":6,"column":1,"offset":105},"end":{"line":6,"column":5,"offset":109},"indent":[]}},{"type":"inlineCode","value":"inspektre init","position":{"start":{"line":6,"column":5,"offset":109},"end":{"line":6,"column":21,"offset":125},"indent":[]}},{"type":"text","value":" in a terminal to start initialization. Initialization option creates necessary configuration files/directories under the current user's context and must be used on trusted compute systems only.","position":{"start":{"line":6,"column":21,"offset":125},"end":{"line":6,"column":215,"offset":319},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":105},"end":{"line":6,"column":215,"offset":319},"indent":[]}},{"type":"jsx","value":"<Info>\nFor common use-cases such as a CI/CD pipeline, do not use initialization. Instead configure and use required secrets.\n</Info>","position":{"start":{"line":8,"column":1,"offset":321},"end":{"line":10,"column":8,"offset":453},"indent":[1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Verify Initialization","position":{"start":{"line":13,"column":3,"offset":458},"end":{"line":13,"column":24,"offset":479},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":456},"end":{"line":13,"column":24,"offset":479},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Inspektre create a configuration file that would later hold session key. Please find the list of locations by Operating Systems.","position":{"start":{"line":14,"column":1,"offset":480},"end":{"line":14,"column":129,"offset":608},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":480},"end":{"line":14,"column":129,"offset":608},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Micosoft Windows: ","position":{"start":{"line":15,"column":3,"offset":611},"end":{"line":15,"column":21,"offset":629},"indent":[]}},{"type":"inlineCode","value":"C:\\Users\\<user>\\.config\\inspektre\\.env","position":{"start":{"line":15,"column":21,"offset":629},"end":{"line":15,"column":61,"offset":669},"indent":[]}}],"position":{"start":{"line":15,"column":3,"offset":611},"end":{"line":15,"column":61,"offset":669},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":609},"end":{"line":15,"column":61,"offset":669},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Mac OS X: ","position":{"start":{"line":16,"column":3,"offset":672},"end":{"line":16,"column":13,"offset":682},"indent":[]}},{"type":"inlineCode","value":"/Users/<user>/.config/inspektre/.env","position":{"start":{"line":16,"column":13,"offset":682},"end":{"line":16,"column":51,"offset":720},"indent":[]}}],"position":{"start":{"line":16,"column":3,"offset":672},"end":{"line":16,"column":51,"offset":720},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":670},"end":{"line":16,"column":51,"offset":720},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"ChromeOS & Linux (Debian/Fedora/): ","position":{"start":{"line":17,"column":3,"offset":723},"end":{"line":17,"column":38,"offset":758},"indent":[]}},{"type":"inlineCode","value":"/home/<user>/.config/inspektre/.env","position":{"start":{"line":17,"column":38,"offset":758},"end":{"line":17,"column":75,"offset":795},"indent":[]}}],"position":{"start":{"line":17,"column":3,"offset":723},"end":{"line":17,"column":75,"offset":795},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":721},"end":{"line":17,"column":75,"offset":795},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":609},"end":{"line":17,"column":75,"offset":795},"indent":[1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Initialization\",\"metaTitle\":\"Inspektre | Initialization\",\"metaDescription\":\"Initialization\"}","position":{"start":{"line":20,"column":1,"offset":798},"end":{"line":20,"column":131,"offset":928},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":20,"column":131,"offset":928}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Initialization\",\n  \"metaTitle\": \"Inspektre | Initialization\",\n  \"metaDescription\": \"Initialization\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Info = makeShortcode(\"Info\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Version\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"To check the version of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"inspektre SDK\"), \", type \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"inspektre -V\"), \" in a terminal.\")), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Initialization\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Type\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"inspektre init\"), \" in a terminal to start initialization. Initialization option creates necessary configuration files/directories under the current user's context and must be used on trusted compute systems only.\"), mdx(Info, {\n    mdxType: \"Info\"\n  }, \"For common use-cases such as a CI/CD pipeline, do not use initialization. Instead configure and use required secrets.\")), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Verify Initialization\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Inspektre create a configuration file that would later hold session key. Please find the list of locations by Operating Systems.\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Micosoft Windows: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"C:\\\\Users\\\\<user>\\\\.config\\\\inspektre\\\\.env\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mac OS X: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"/Users/<user>/.config/inspektre/.env\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"ChromeOS & Linux (Debian/Fedora/): \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"/home/<user>/.config/inspektre/.env\")))));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Initialization\",\n  \"metaTitle\": \"Inspektre | Initialization\",\n  \"metaDescription\": \"Initialization\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n      console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n      return <div {...props}/>\n    };\nconst Info = makeShortcode(\"Info\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <section><h1 parentName=\"section\">{`Version`}</h1><p parentName=\"section\">{`To check the version of `}<inlineCode parentName=\"p\">{`inspektre SDK`}</inlineCode>{`, type `}<inlineCode parentName=\"p\">{`inspektre -V`}</inlineCode>{` in a terminal.`}</p></section>\n    <section><h1 parentName=\"section\">{`Initialization`}</h1><p parentName=\"section\">{`Type`}<inlineCode parentName=\"p\">{`inspektre init`}</inlineCode>{` in a terminal to start initialization. Initialization option creates necessary configuration files/directories under the current user's context and must be used on trusted compute systems only.`}</p><Info mdxType=\"Info\">\nFor common use-cases such as a CI/CD pipeline, do not use initialization. Instead configure and use required secrets.\n      </Info></section>\n    <section><h1 parentName=\"section\">{`Verify Initialization`}</h1><p parentName=\"section\">{`Inspektre create a configuration file that would later hold session key. Please find the list of locations by Operating Systems.`}</p><ul parentName=\"section\">\n        <li parentName=\"ul\">{`Micosoft Windows: `}<inlineCode parentName=\"li\">{`C:\\\\Users\\\\<user>\\\\.config\\\\inspektre\\\\.env`}</inlineCode></li>\n        <li parentName=\"ul\">{`Mac OS X: `}<inlineCode parentName=\"li\">{`/Users/<user>/.config/inspektre/.env`}</inlineCode></li>\n        <li parentName=\"ul\">{`ChromeOS & Linux (Debian/Fedora/): `}<inlineCode parentName=\"li\">{`/home/<user>/.config/inspektre/.env`}</inlineCode></li>\n      </ul></section>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}