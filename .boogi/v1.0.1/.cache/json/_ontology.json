{"data":{"site":{"siteMetadata":{"title":"inspektre docs","docsLocation":"https://github.com/inspektre/docs.git","docsLocationType":"github","editable":true}},"mdx":{"fields":{"id":"feebf4b1-8d47-5bff-b60f-f314ef3eddab","title":"Ontology","slug":"/ontology"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Ontology\",\n  \"metaTitle\": \"Inspektre | Ontology\",\n  \"metaDescription\": \"Specifications used in Inspektre\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Ontology\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Inspektre utilizes several existing security ontologies and specifications. Each ontology helps contribute towards a knowledge Graph.\")), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"More\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Click next to continue reading about the ontologies.\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#ontology","title":"Ontology"},{"url":"#more","title":"More"}]},"timeToRead":1,"parent":{"__typename":"File","relativePath":"ontology.md","fields":null},"frontmatter":{"metaTitle":"Inspektre | Ontology","showMetadata":null,"editable":null,"showPreviousNext":null,"showToc":null}},"gitBranch":{"name":"main"},"gitCommit":{"hash":"efc7e5c8cc0e7cf00dbaf1bf60ac21f5c179f68b","date":"2020-12-05 02:12"}},"pageContext":{"id":"feebf4b1-8d47-5bff-b60f-f314ef3eddab"}}