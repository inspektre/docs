{"data":{"site":{"siteMetadata":{"title":"inspektre docs","docsLocation":"https://github.com/inspektre/docs.git","docsLocationType":"github","editable":true}},"mdx":{"fields":{"id":"f228dda0-324d-5012-85f9-85af4114ad4d","title":"Knowledge Graph","slug":"/ontology/4-knowledge-graph"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Knowledge Graph\",\n  \"metaTitle\": \"Inspektre | Knowledge Graph\",\n  \"metaDescription\": \"Inspektre Knowledge Graph\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"What is a knowledge Graph\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"A Knowledge graph acquires information from sources creating an ontology.\\nFurther, information is organized to derive meaningful information aka Knowledge.\")), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Knowledge Graph with Inspektre\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Inspektre Knowledge Graph Domain is a programmatic way to explore interlinked security data.\\nWe've created ontology to help developers quicky understand potential cyber attacks that\\nneed to be considered for a given software project.\")), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Interlinking domains\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Interlinking various domains in creating an ontology (Knowledge Graph) with Inspektre helps make real-world queries more manageable.\")), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Application Profiling (Code Intelligence)\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Inspektre profiles code to establish intelligence. This must be performed as an early-phase activity.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"By profiling the application, Inspektre establishes security domains that are relevant to a project.\")), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Instance: Authentication\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"If a given project's code uses JWT Tokens,\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This information isinterpreted by Inspektre that the application uses Authentication and has Authorization.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Relevant attacks related to abuse of tokens. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Using the Knowledge Graph, Inspektre predicts attacks (For instance)\\nSignature Spoofing by Key Theft.\\nRemote Services with Stolen Credentials.\\nToken Impersonation.\\nExploiting Trust in Client\\nSession Credential Falsification through Prediction\"))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#what-is-a-knowledge-graph","title":"What is a knowledge Graph"},{"url":"#knowledge-graph-with-inspektre","title":"Knowledge Graph with Inspektre"},{"url":"#interlinking-domains","title":"Interlinking domains"},{"url":"#application-profiling-code-intelligence","title":"Application Profiling (Code Intelligence)"},{"url":"#instance-authentication","title":"Instance: Authentication"}]},"timeToRead":1,"parent":{"__typename":"File","relativePath":"ontology/4-knowledge-graph.md","fields":{"gitLogLatestAuthorName":"Uday Korlimarla","gitLogLatestAuthorEmail":"uday@inspektre.io","gitLogLatestDate":"an hour ago"}},"frontmatter":{"metaTitle":"Inspektre | Knowledge Graph","showMetadata":null,"editable":null,"showPreviousNext":null,"showToc":null}},"gitBranch":{"name":"main"},"gitCommit":{"hash":"82422adc4b96937bf093d1745e56ec3687c1fa4c","date":"2020-12-05 03:14"}},"pageContext":{"id":"f228dda0-324d-5012-85f9-85af4114ad4d"}}