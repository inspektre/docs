{"expireTime":9007200861967997000,"key":"gatsby-plugin-mdx-entire-payload-e583fd942786f3c03884fa6eb1d8ce08-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Ontology","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":11,"offset":11},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":11,"offset":11},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Inspektre utilizes several existing security ontologies and specifications. Each ontology helps contribute towards a knowledge Graph.","position":{"start":{"line":3,"column":1,"offset":12},"end":{"line":3,"column":134,"offset":145},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":12},"end":{"line":3,"column":134,"offset":145},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"More","position":{"start":{"line":5,"column":3,"offset":149},"end":{"line":5,"column":7,"offset":153},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":147},"end":{"line":5,"column":7,"offset":153},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Click next to continue reading about the ontologies.","position":{"start":{"line":6,"column":1,"offset":154},"end":{"line":6,"column":53,"offset":206},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":154},"end":{"line":6,"column":53,"offset":206},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Ontology\",\"metaTitle\":\"Inspektre | Ontology\",\"metaDescription\":\"Specifications used in Inspektre\"}","position":{"start":{"line":9,"column":1,"offset":209},"end":{"line":9,"column":137,"offset":345},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":9,"column":137,"offset":345}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Ontology\",\n  \"metaTitle\": \"Inspektre | Ontology\",\n  \"metaDescription\": \"Specifications used in Inspektre\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Ontology\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Inspektre utilizes several existing security ontologies and specifications. Each ontology helps contribute towards a knowledge Graph.\")), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"More\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Click next to continue reading about the ontologies.\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Ontology\",\n  \"metaTitle\": \"Inspektre | Ontology\",\n  \"metaDescription\": \"Specifications used in Inspektre\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <section><h1 parentName=\"section\">{`Ontology`}</h1><p parentName=\"section\">{`Inspektre utilizes several existing security ontologies and specifications. Each ontology helps contribute towards a knowledge Graph.`}</p></section>\n    <section><h1 parentName=\"section\">{`More`}</h1><p parentName=\"section\">{`Click next to continue reading about the ontologies.`}</p></section>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}