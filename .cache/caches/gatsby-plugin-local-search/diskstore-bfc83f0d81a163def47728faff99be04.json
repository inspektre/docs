{"expireTime":9007200861964913000,"key":"619529e2-5908-5eee-95a9-09559e41f90d","val":{"9f21f16d-d1db-5d47-a00d-360b04ff3786":{"slug":"/gettingstarted","title":"Getting Started","excerpt":"Interacting with Inspektre Inspektre or Inspektre API can be accessed via either the dashboard   GraphQL API   SDK Client . Dashboard To Access the Dashboard, visit  inspektre.io  and click on the  Customer Portal . API Inspektre API is GraphQL API available at  https://api.inspektre.io"},"0544ab29-198f-5404-886b-cbb5eb6fa433":{"slug":"/","title":"inspektre docs","excerpt":"Inspektre | Application Security Measured"},"ecbda151-4607-52bf-91de-f5bd1f674c1c":{"slug":"/ontology","title":"Ontology","excerpt":"Ontology Inspektre utilizes several existing security ontologies and specifications. Each ontology helps contribute towards a knowledge Graph. More Click next to continue reading about the ontologies."},"9254df89-b501-509a-acc6-95e738741ba5":{"slug":"/projects","title":"Projects","excerpt":"Projects This section contains details on how to create projects on Inspektre. Github Actions Current Instances show how Inspektre can be used with Github Actions and Github CI. However, Inspektre can be used to execute similar results on any CI/CD Pipeline."},"d81db789-84fb-5f7f-b6c0-3633aa16e0ae":{"slug":"/videos/index","title":"Video Casts","excerpt":"Inspektre casts are video-series recorded to help . Installation Click here to watch the installation video"},"1e308cf7-3c7b-58f1-a1a6-96a81f156c4d":{"slug":"/ontology/1-asvs","title":"ASVS","excerpt":"OWASP The Open Web Application Security Project (OWASP) is an online community that produces freely-available articles, methodologies, documentation, tools, and technologies in the field of web application security. More information about the OWASP Foundation can be  found here   https://owasp.org . OWASP ASVS OWASP Application Security Verification Standard (ASVS) is an open application security standard. information about OWASP ASVS can be  found here   https://github.com/OWASP/ASVS . Standard Objectives Help organizations adopt or adapt a high quality secure coding standard Help architects and developers build secure software by designing and building security in, and verifying that they are in place and effective by the use of unit and integration tests that implement ASVS tests Help deploy secure software via the use of repeatable, secured builds Help security reviewers use a comprehensive, consistent, high quality standard for hybrid code reviews, secure code reviews, peer code reviews, retrospectives, and work with developers to build security unit and integration tests. It is even possible to use this standard for penetration testing at Level 1 Assist tool vendors by ensuring there is an easily generatable machine readable version, with CWE mappings Assist organizations to benchmark application security tools by the percentage of coverage of the ASVS for dynamic, interactive, and static analysis tools Minimize overlapping and competing requirements from other standards, by either aligning strongly with them (NIST 800-63), or being strict supersets (OWASP Top 10 2017, PCI DSS 3.2.1), which will help reduce compliance costs, effort, and time wasted in accepting unnecessary differences as risks. Automating Verifications ASVS is a part of the Inspektre's Knowledge Graph Ontology and helps to automate tracking. When a specific threat is marked as remediated or not relevant, Inspektre can automatically track the relevant ASVS Verification. Further, Inspektre Dashboard helps track the relevant ASVS Tasks & Levels to establish & track metrics. More information For more information on Code Intelligence, Application Profiling & Knowledge Graphs, Please reach out to us at  contact@inspektre.io ."},"d050aff7-4dd9-5598-ad05-992bf93f7503":{"slug":"/ontology/2-cve","title":"CVE","excerpt":"What is a CVE Common Vulnerabilities and Exposure  OR a CVEs are a list of entries. Each entry corresponds to identifying identification containing a Unique Identifier with atleast one Public Reference. CVE Entries are used by a plethora of cyber security products & services around the world. CVE Entries are used by organizations & individuals to identify products & services for the presense of publicly known vulnerability, Threat & Exposure associated with the consmption of a product, Remediation / Patching guide to help reduce the threat & exposure and etc. More information can be  found here   https://cve.mitre.org/ . Knowledge Graphs Inspektre consumes CVEs passively to augment the knowledge graphs. This provides organization or projects to add relevance from known Vulnerabilities. Attempts are made to predict if new attacks are possible on a project based on the presense of a newer CVE. The passively augmentation must be used when: Using popular Software Composition Tools. Using popular container scanning tools. Tool Instances: Blackduck, Snyk, Whitesource, Checkmarx and etc."},"ed9b1339-5adc-51d7-8a3a-867dbbfb114b":{"slug":"/ontology/3-cwe","title":"CWE","excerpt":"What is a CWE Common Weakness Enumeration (CWE) is a community developed list / dictionary of software & hardware weaknesses that have security implications. It serves as a common language across a plethora of security tools to serve as a baseline for identifying security weaknesses that may potentially exist. CWEs help developers and security to understand a specific class or type when performing remediation or hardening. More infomation can be  found here   https://cwe.mitre.org/ . Instance of CWE CWE-1289  represents a unique weakness that relates to weakness class where payload is received (From user or machines) and is consumed without validation. CWEs  are hireachical i.e. CWE-20 corresponds to improper input validation. Thus logically,  CWE-1289  has a  child-of  relationship with  CWE-20 . Knowledge Graphs Inspektre Knowledge Graphs treat these relationships as special properties to automaitcally produce more meaningful contexts. When code is examined to extract Code Integellicence, Information obtained is automaitcally classified into the relevant CWE hierarchy. When Inspektre is used as part of a CI/CD pipeline after SAST / IAST tools generate report, this Information is used to further augment the Knowledge graph. Each augmentation step helps Organization OR project with more specific cyber attacks. More information For more information on Code Intelligence, Application Profiling & Knowledge Graphs, Please reach out to us at  contact@inspektre.io ."},"63777311-e318-5216-9d72-9d7a55aeaf03":{"slug":"/ontology/4-knowledge-graph","title":"Knowledge Graph","excerpt":"What is a knowledge Graph A Knowledge graph acquires information from sources creating an ontology. \nFurther, information is organized to derive meaningful information aka Knowledge. Knowledge Graph with Inspektre Inspektre Knowledge Graph Domain is a programmatic way to explore interlinked security data. \nWe've created ontology to help developers quicky understand potential cyber attacks that \nneed to be considered for a given software project. Interlinking domains Interlinking various domains in creating an ontology (Knowledge Graph) with Inspektre helps make real-world queries more manageable. Application Profiling (Code Intelligence) Inspektre profiles code to establish intelligence. This must be performed as an early-phase activity. By profiling the application, Inspektre establishes security domains that are relevant to a project. Instance: Authentication If a given project's code uses JWT Tokens, This information isinterpreted by Inspektre that the application uses Authentication and has Authorization. Relevant attacks related to abuse of tokens.  Using the Knowledge Graph, Inspektre predicts attacks (For instance)\nSignature Spoofing by Key Theft.\nRemote Services with Stolen Credentials.\nToken Impersonation.\nExploiting Trust in Client\nSession Credential Falsification through Prediction"},"7f4d6ca6-5d3d-5700-a141-56af0eec90ba":{"slug":"/gettingstarted/1-sdk","title":"SDK","excerpt":"Inspektre SDK Inspektre SDK is a monorepo to be used as a Javascript client & CLI to interact with Inspektre Knowledge Graphs. Code Quality \n \n Purpose The utility is helpful in performing the following: Query Inspektre Security Graphs. Manage projects on Inspektre Platform. Modify user roles or permissions. Supress attack patterns or weaknesses or verifications. inspektre sdk  is a graphql client that queries to  api.inspektre.io  and query the  inspektre security graphs .  Usage Authorize Inspektre CLI command  authorize  is   Device Authorization Grant  as specified in OAuth 2.0 RFC 8628 located  here . To Authorize a device, run  inspektre authorize . For verbose mode, run  inspektre authorize -v . Reauthorize Reauthroize command is used to refresh device authorization and extending the device authorization. To reauthorize, run  inspektre reauthorize . For Verbose, run  inspektre reauthorize -v . Environment Variables In order to use Inspektre as a  cli , Please ensure that an environment variable  CLIENT_ID  &  CLIENT_SECRET is set. You will be able find the  CLIENT_ID  under your account at  https://app.inspektre.io/ . Attack patterns Inspektre Knowledge Graphs use information from a repository AND/OR project configuration to automatically predict attack patterns. Each Attack Pattern has a Typical Severity as well as a likelihood associated. This makes it ideal for a Developer OR \nApplication Security engineer to search for attack patterns based on the organization's or a project's sensitivity. Typical Severity Levels Critical High Medium Low Very Low Likelihood of Attack Levels High Low Medium"},"dde721f6-eb2c-5c80-9efd-7679a5abaa46":{"slug":"/gettingstarted/2-installation","title":"Install inspektre","excerpt":"Prerequisites NodeJS v14 or Above. Yarn package manager (optional) With Yarn Yarn package manager offers a simpler approach to managing NodeJS packages.\nTo install or upgrade inspektre with  yarn , type the below in a terminal With NPM NodeJS installation comes with  npm  to install packages from npmjs.org. To install or upgrade inspektre with  npm , type the below in a terminal.   npm i -g @inspektre/inspektre From the source To use inspektre SDK from the source, visit  https://github.com/inspektre/inspektre ."},"ededb061-c82a-5562-b466-4bafe909e6a3":{"slug":"/gettingstarted/3-verify-installation","title":"Initialization","excerpt":"Version To check the version of  inspektre SDK , type  inspektre -V  in a terminal. Initialization Type inspektre init  in a terminal to start initialization. Initialization option creates necessary configuration files/directories under the current user's context and must be used on trusted compute systems only. Verify Initialization Inspektre create a configuration file that would later hold session key. Please find the list of locations by Operating Systems. Micosoft Windows:  C:\\Users\\<user>\\.config\\inspektre\\.env Mac OS X:  /Users/<user>/.config/inspektre/.env ChromeOS & Linux (Debian/Fedora/):  /home/<user>/.config/inspektre/.env"},"10604e39-0d0d-5a6a-939d-4846f601cac6":{"slug":"/projects/2-create-project","title":"Creating a new project","excerpt":"CI/CD Workflow Inspektre can work in any CI/CD workflows.  Required dependencies are installed. Deepcode (Synk Deepcode - deepcode.ai) and CodeIntel (Microsoft AppInspector) are run. Finally, Inspektre commands is run as below. Command: inspektre inspect -p @inspektre/inspektre -f $GITHUB_WORKSPACE/AppInspectorResults.json --sarif output.sarif --deepcode The  -p <project_name>  here represents a project name and is required. The  -f <file_path>  is to letting Inspektre know where Microsoft AppInspector results are present. The  --sarif  mode specified whether Default Threat Level The default threat level on Inspektre is L1. This value is used for both Attack Detection and ASVS.  --threatLevel  Flag needs to be used to alter this (Instance:  inspektre inspect --threatLevel L2 ). However, we recommend remediation or supressing all attacks with the default level prior to altering threatLevel in order to maintain a methodical approach. Github CI/CD Workflow"},"1ea72b93-b740-5a3d-8067-f3a530497bc3":{"slug":"/projects/1-structure","title":"Structure","excerpt":"Project Project(s) on-boarded on inspektre are enhanced to create meaningful knowledge-graphs and help providing contextually relevant information. Below graph shows a quick high-level view on how inspektre graphs look like. Structure Below is an end-to-end data-flow of data from CI/CD to what is visible on a dashboard. Further, "}}}