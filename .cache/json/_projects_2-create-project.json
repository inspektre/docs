{"data":{"site":{"siteMetadata":{"title":"inspektre docs","docsLocation":"https://github.com/inspektre/docs.git","docsLocationType":"github","editable":true}},"mdx":{"fields":{"id":"10604e39-0d0d-5a6a-939d-4846f601cac6","title":"Creating a new project","slug":"/projects/2-create-project"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Creating a new project\",\n  \"metaTitle\": \"Inspektre | Create\",\n  \"metaDescription\": \"Inspektre Create Project\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"CI/CD Workflow\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Inspektre can work in any CI/CD workflows. \"), mdx(\"ol\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Required dependencies are installed.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Deepcode (Synk Deepcode - deepcode.ai) and CodeIntel (Microsoft AppInspector) are run.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Finally, Inspektre commands is run as below.\"))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Command:\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"inspektre inspect -p @inspektre/inspektre -f $GITHUB_WORKSPACE/AppInspectorResults.json --sarif output.sarif --deepcode\")), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"-p <project_name>\"), \" here represents a project name and is required.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"-f <file_path>\"), \" is to letting Inspektre know where Microsoft AppInspector results are present.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"--sarif\"), \" mode specified whether\"))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Default Threat Level\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"The default threat level on Inspektre is L1. This value is used for both Attack Detection and ASVS. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"--threatLevel\"), \" Flag needs to be used to alter this (Instance: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"inspektre inspect --threatLevel L2\"), \"). However, we recommend remediation or supressing all attacks with the default level prior to altering threatLevel in order to maintain a methodical approach.\")), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Github CI/CD Workflow\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-name:\",\n    \"metastring\": \"\\\"Inspektre Scan\\\"\",\n    \"\\\"Inspektre\": true,\n    \"Scan\\\"\": true\n  }), \"on: push\\njobs:\\n  scan:\\n    runs-on: ubuntu-latest\\n    steps:\\n      - name: Checkout\\n        uses: actions/checkout@v2\\n      - name: Perform DeepCode analysis\\n        uses: georgismitev/deepcode-code-scanning-analysis@master\\n        env:\\n          DEEPCODE_TOKEN: ${{secrets.DEEPCODE_TOKEN}}\\n      - name: codeintel\\n        uses: inspektre/codeintel-gh@v1\\n      - name: setup-node\\n        uses: actions/setup-node@v2-beta\\n        with:\\n          node-version: '14'\\n      - name: install inspektre\\n        env:\\n          NPM_CONFIG_PREFIX: \\\"~/.npm-global\\\"\\n        run: |\\n          export PATH=\\\"$(yarn global bin):$PATH\\\"\\n          yarn global add @inspektre/inspektre\\n      - name: inspektre inspect\\n        env:\\n          INSPEKTRE_TOKEN: ${{secrets.INSPEKTRE_TOKEN}}\\n          INSPEKTRE_CLIENT_ID: ${{secrets.INSPEKTRE_CLIENT_ID}}\\n          INSPEKTRE_CLIENT_SECRET: ${{secrets.INSPEKTRE_CLIENT_SECRET}}\\n        run: |\\n          ~/.npm-global/bin/inspektre reauthorize\\n          ~/.npm-global/bin/inspektre inspect -p @inspektre/inspektre -f $GITHUB_WORKSPACE/AppInspectorResults.json --sarif output.sarif --deepcode\\n\"))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#cicd-workflow","title":"CI/CD Workflow"},{"url":"#command","title":"Command:"},{"url":"#default-threat-level","title":"Default Threat Level"},{"url":"#github-cicd-workflow","title":"Github CI/CD Workflow"}]},"timeToRead":1,"parent":{"__typename":"File","relativePath":"projects/2-create-project.md","fields":{"gitLogLatestAuthorName":"Uday Korlimarla","gitLogLatestAuthorEmail":"uday@inspektre.io","gitLogLatestDate":"13 hours ago"}},"frontmatter":{"metaTitle":"Inspektre | Create","showMetadata":null,"editable":null,"showPreviousNext":null,"showToc":null}},"gitBranch":{"name":"dev"},"gitCommit":{"hash":"9a61f11652b6f677e1d89afe1af26249a12de9b4","date":"2020-12-06 01:54"}},"pageContext":{"id":"10604e39-0d0d-5a6a-939d-4846f601cac6"}}